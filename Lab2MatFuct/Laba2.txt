#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include<math.h>
#include <iostream>
#define amount_type syma_revers (massive,n);
using namespace std;
typedef float(*option)(float, float, int);
//Сумма прямая
float syma_dir(float* massive, int m)
{
	float syma = 0;
	int i;
	for (i = 0; i < m; i++)
	{
		syma += massive[i];
	}
	return syma;
}
//Сумма обратная
float syma_revers(float* massive, int m)
{
	float syma = 0;
	int i;
	for (i = 1; i <= m; i++)
	{
		syma += massive[m - i];
	}
	return syma;
}
//Сумма попарная
float syma_para(float* massive, int m)
{
	int i;
	float syma = 0;
	for (i = 0; i < m - 1; i += 2)
		massive[i] += massive[i + 1];
	if (m % 2 == 1)
		syma += massive[i + 2];
	for (i = 0; i < m; i += 2)
		syma += massive[i];
	return syma;
}
//sin(x)
float sin_x(float str, float n, int i)
{
	i = 2 * i + 1;
	return (str * (-1.f) * n * n) / (i * (i - 1.f));
}
//cos(x)
float cos_x(float str, float n, int i)
{
	i = 2 * i;
	return (str * (-1.f) * n * n) / (i * (i - 1.f));
}
//exp(x)
float exp_x(float pred, float n, int i)
{
	return (pred * n) / ((float)i);
}

//ln(x+1)
float ln_x(float str, float n, int i)
{
	return (str * (-1.f) * n * i) / (i + 1.f);
}

void made_massive(float* massive, int m, option result, float p)
{
	int i;

	for (i = 1; i < m; i++)
	{
		massive[i] = result(massive[i - 1], p, i);
	}
}
//Интерфейс для выбора математических функций
void main()
{
	float* massive;
	float x;
	int select;
	int n = 100;
	float syma = 0; 

	cout << "Mathematical functions:\n";

	printf("1.cos(x)\n");
	printf("2.sin(x)\n");
	printf("3.ln(1+x)\n");
	printf("4.exp(x)\n");
	scanf_s("%d", &select);

	cout << "Vedite znachenie:\n";
	scanf_s("%f", &x);
	massive = (float*)malloc(n * sizeof(float));
	switch (select)
	{
		//Вывод математической функции cos(X)
	case(1):
	{
		massive[0] = 1.f;
		made_massive(massive, n, cos_x, (float)x);
		syma = amount_type;
		cout << "cos(x)\n";
		printf("%f\n", syma);

		cout << "Realnoe znachenie\n";//Значение из библиотеки математических функций
		printf("%f\n", (float)cos(x));

		cout << "Pogreshnost znachenia\n";//Погрешность значения в подсчетах математических функций
		printf("%f\n", (cos(x) - syma));

		cout << "Pogreshnost znachenia - ( % )\n";//Относительная погрешность в процентах
		printf("%f\n", (((cos(x) - syma) / cos(x)) * 100));


		break;
		//Вывод математической функции sin(X)
	case(2):
		massive[0] = (float)x;
		made_massive(massive, n, sin_x, (float)x);
		syma = amount_type;
		cout << "sin(x)\n";
		printf("%f\n", syma);

		cout << "Realnoe znachenie\n";//Значение из библиотеки математических функций
		printf("%f\n", (float)sin(x));

		cout << "Pogreshnost znachenia\n";//Погрешность значения в подсчетах математических функций
		printf("%f\n", (sin(x) - syma));

		cout << "Pogreshnost znachenia - ( % )\n";//Относительная погрешность в процентах
		printf("%f\n", (((sin(x) - syma) / sin(x)) * 100));


		break;
		//Вывод математической функции ln(X+1)
	case(3):
		massive[0] = (float)x;
		made_massive(massive, n, ln_x, (float)x);
		syma = amount_type;
		cout << "ln(x+1)\n";
		printf("%f\n", syma);

		cout << "Realnoe znachenie\n";//Значение из библиотеки математических функций
		printf("%f\n",log(1.0+x));

		cout << "Pogreshnost znachenia\n";//Погрешность значения в подсчетах математических функций
		printf("%f\n", (log(1.0 + x) - syma));

		cout << "Pogreshnost znachenia - ( % )\n";//Относительная погрешность в процентах
		printf("%f\n", (((log(1.0 + x) - syma) / log(1.0 + x)) * 100));



		break;
        //Вывод математической функции exp(X)
	case(4):
		massive[0] = 1.f;
		made_massive(massive, n, exp_x, (float)x);
		syma = amount_type;
		cout << "exp(x)\n";
		printf("%f\n", syma);

		cout << "Realnoe znachenie\n";//Значение из библиотеки математических функций
		printf("%f\n", exp(x));

		cout << "Pogreshnost znachenia\n";//Погрешность значения в подсчетах математических функций
		printf("%f\n", (exp(x) - syma));

		cout << "Pogreshnost znachenia - ( % )\n";//Относительная погрешность в процентах
		printf("%f\n", (((exp(x) - syma) / exp(x)) * 100));



		break;
	}

	}
}